{"version":3,"sources":["components/context/csv-context.js","components/utils/SideDrawer.js","components/utils/Header.js","components/utils/Dashboard.js","components/ml/utils.js","components/utils/CsvReader.js","components/utils/CsvTable.js","components/utils/Overview.js","ML/utils.js","ML/linreg.js","components/ml/linreg.js","App.js","index.js"],"names":["csvContext","createContext","csv","fetchCsv","useStyles","makeStyles","theme","root","display","button","margin","spacing","drawer","breakpoints","up","width","flexShrink","toolbar","mixins","drawerPaper","paddingTop","SideDrawer","props","history","useHistory","classes","useTheme","pushLink","link","push","handleDrawerToggle","ListItem","Typography","style","fontSize","fontWeight","color","Divider","List","onClick","ListItemText","primary","ListSubheader","component","className","aria-label","Hidden","lgUp","Drawer","container","variant","anchor","direction","open","mobileOpen","onClose","paper","ModalProps","keepMounted","mdDown","appBar","zIndex","menuButton","marginRight","content","flexGrow","title","Header","useState","setMobileOpen","CssBaseline","AppBar","position","Toolbar","IconButton","edge","src","height","alt","marginTop","children","Dashboard","ReadCSV","url","delimiter","tfdata","hasHeader","SetDifference","a","b","filter","x","includes","CreateTensor","data","labels","arr","label","tfcore","Zip","map","e","i","DrawChart","y","preds","series_names","series","length","values","surface","name","tab","tfvis","scatterplot","CsvReader","useContext","onDrop","accepted","rejected","links","preview","Paper","padding","accept","multiple","CsvTable","columns","setColumns","setData","useEffect","columnNames","toArray","Fetch","options","filterType","responsive","textAlign","Overview","Grid","item","md","xs","NormalizeVal","max","min","value","std","sub","div","ScaleBackVal","val","pred","mul","add","ScaleBackValRaw","InputDimSize","tensor","shape","RootMeanSquareError","yTrue","yPred","tf","meanSquaredError","ExtractInformation","raw","colName","SplitIntoInputAndLabel","labelCol","x_raw","y_raw","kv","Number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","Math","console","log","Fit","xTrain","yTrain","OnEpochEndCallBack","_","l1","l2","epochs","batchSize","validationSplit","regularizer","l1l2","units","model","dense","inputShape","kernelRegularizer","compile","loss","optimizer","sgd","metrics","meanAbsoluteError","logs","fit","shuffle","callbacks","onEpochEnd","epoch","rmse","val_rmse","val_loss","mae","meanAbsoluteError$1","val_mae","val_meanAbsoluteError$1","weights","weight","dataSync","Predict","args","predict","lossContainer","accContainer","Perform","LinearRegressionApply","xCols","Utils","val_pred","array","val_pred_norm","prediction","arraySync","summary","modelSummary","val_pred_norms","Promise","all","y_vals","x_vals","LinearRegression","React","setColumnNames","selectedColumn","setSelectedColumns","LoadColumnNames","to","Button","createMuiTheme","customTheme","App","setCsv","useCallback","routes","path","exact","ThemeProvider","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c823e4d.chunk.js","sourcesContent":["  import { createContext } from 'react';\r\n\r\nexport const csvContext = createContext({\r\n    csv: null,\r\n    fetchCsv: (csv) => {}\r\n});","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport List from '@material-ui/core/List';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst drawerWidth = 250;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('lg')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingTop: \"64px\",\r\n    },\r\n  },  \r\n}));\r\n\r\nconst SideDrawer = props => {\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const pushLink = link => {\r\n      history.push(link);\r\n      props.handleDrawerToggle();\r\n    }\r\n\r\n    const drawer = (\r\n        <div>\r\n            <ListItem classes={{root: classes.root}} button>\r\n                <Typography style={{ fontSize: '20px', fontWeight: '500', color: 'white' }}>\r\n                    Algorithms\r\n                </Typography>\r\n              </ListItem>\r\n          <Divider />\r\n          <List>\r\n            <ListItem button onClick={() => {pushLink('/')}}>\r\n                <ListItemText primary=\"Dashboard\" />\r\n              </ListItem>\r\n              <ListItem button onClick={() => {pushLink('/overview')}}>\r\n                <ListItemText primary=\"Overview\" />\r\n              </ListItem>\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n          <ListSubheader component=\"div\">\r\n            REGRESSION\r\n          </ListSubheader>  \r\n          <ListItem button onClick={() => {pushLink('/ml/linreg')}}>\r\n                <ListItemText primary=\"Linear Regression\" />\r\n              </ListItem>\r\n              <ListItem button>\r\n                <ListItemText primary=\"Logistic Regression\" />\r\n              </ListItem>\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n          <ListSubheader component=\"div\">\r\n            CLASSIFICATION\r\n          </ListSubheader>\r\n              <ListItem button onClick={() => {pushLink('/search')}}>\r\n                <ListItemText primary=\"PCA\" />\r\n              </ListItem>  \r\n              <ListItem button onClick={() => {pushLink('/videoquality')}}>\r\n                <ListItemText primary=\"KMeans\" />\r\n              </ListItem>\r\n              <ListItem button>\r\n                <ListItemText primary=\"SVM\" />\r\n              </ListItem>\r\n              <ListItem button>\r\n                <ListItemText primary=\"KNN Classifier\" />\r\n              </ListItem>\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n          <ListSubheader component=\"div\">\r\n            NEURAL NETWORKS\r\n          </ListSubheader>  \r\n            <ListItem button onClick={() => {pushLink('/maps')}}>\r\n                <ListItemText primary=\"CNN\" />\r\n              </ListItem>\r\n          </List>\r\n        </div>\r\n      );\r\n\r\n    return (\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        <Hidden lgUp>\r\n          <Drawer\r\n            container={props.container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n            open={props.mobileOpen}\r\n            onClose={props.handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden mdDown>\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav> \r\n  );\r\n}\r\n\r\nexport default SideDrawer;","import React, { useState } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport SideDrawer from './SideDrawer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up('lg')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n    title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst Header = props => {\r\n  const { container } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <img src=\"logo192.png\" height=\"30\" width=\"30\" alt=\"logo\" />\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            &nbsp;Data Miner\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n        <SideDrawer \r\n          theme={theme}\r\n          container={container}\r\n          handleDrawerToggle={handleDrawerToggle}\r\n          mobileOpen={mobileOpen}\r\n          setMobileOpen={setMobileOpen}\r\n        />\r\n      <main className={classes.content}>\r\n        <div style={{ marginTop: \"70px\" }}>\r\n            {props.children}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  container: PropTypes.any,\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Dashboard = () => {\r\n    return (\r\n        <div>\r\n            fg\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard;","import * as tfdata from \"@tensorflow/tfjs-data\";\r\nimport * as tfcore from \"@tensorflow/tfjs-core\";\r\nimport * as tfvis from \"@tensorflow/tfjs-vis\";\r\n\r\nexport function ReadCSV(url, delimiter) {\r\n    const data = tfdata.csv(url, {\r\n        hasHeader: true,\r\n        delimiter: delimiter\r\n    });\r\n    return data;\r\n}\r\nexport function SetDifference(a, b) {\r\n    return a.filter(x => !b.includes(x));\r\n}\r\n\r\nexport function CreateTensor(data, labels) {\r\n    const arr = [];\r\n    for (const label of labels)\r\n        arr.push(data[label]);\r\n    return tfcore.tensor(arr);\r\n}\r\n\r\nexport function Zip(a, b) {\r\n    const c = a.map(function (e, i) {\r\n        return [e, b[i]];\r\n    });\r\n    return c;\r\n}\r\nexport async function DrawChart(x, y, preds) {\r\n    const series_names = [];\r\n    const series = [];\r\n    for (let i = 0; i < x[0].length; ++i) {\r\n        series_names.push(\"X \" + i + \" Y\");\r\n        series.push(Zip(x, y).map(([x, y]) => { return { x: x[i], y }; }));\r\n        series_names.push(\"X \" + i + \" PRED\");\r\n        series.push(Zip(x, preds).map(([x, y]) => { return { x: x[i], y }; }));\r\n    }\r\n    const data = { values: series, series: series_names }\r\n\r\n    const surface = { name: 'Line chart', tab: 'Plot' };\r\n    await tfvis.render.scatterplot(surface, data);\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport MagicDropzone from 'react-magic-dropzone';\r\nimport { csvContext } from '../context/csv-context';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { ReadCSV } from '../ml/utils';\r\n\r\nconst CsvReader = () => {\r\n    const { fetchCsv } = useContext(csvContext);\r\n    const [delimiter, setDelimiter] = useState(',');\r\n    const onDrop = async (accepted, rejected, links) => {\r\n        if (accepted && accepted.length > 0) {\r\n            const url = accepted[0].preview;\r\n            const data = ReadCSV(url, delimiter);\r\n            fetchCsv(data);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Paper style={{ margin: '10px', padding: '10px' }}>\r\n            <MagicDropzone className=\"dropzone\" accept=\".csv\" multiple={false} onDrop={onDrop}>\r\n                <div className=\"center-div-wrap\">\r\n                    <div style={{ display: 'block' }}>\r\n                        <p>Drag/drop csv files over here</p>\r\n                    </div>\r\n                </div>\r\n            </MagicDropzone>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default CsvReader;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { csvContext } from '../context/csv-context';\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nconst CsvTable = () => {\r\n    const { csv } = useContext(csvContext);\r\n    const [columns, setColumns] = useState([])\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect( () => {\r\n        if (csv) {\r\n            async function Fetch() {\r\n                setColumns(await csv.columnNames());\r\n                setData(await csv.toArray())\r\n            }\r\n            Fetch();\r\n        }\r\n    }, [csv])\r\n\r\n    const options = {\r\n        filterType: \"dropdown\",\r\n        responsive: \"scroll\"\r\n    };\r\n\r\n    return (\r\n        <div className=\"csv-table\">\r\n            {csv ? (\r\n                <MUIDataTable\r\n                    title={\"Data Table\"}\r\n                    data={data}\r\n                    columns={columns}\r\n                    options={\r\n\r\n                        options}\r\n                />\r\n            ) : (\r\n                    <div style={{ textAlign: 'center' }}>\r\n                        <h3>No Data Found</h3>\r\n                    </div>\r\n                )}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CsvTable;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CsvReader from './CsvReader';\r\nimport CsvTable from './CsvTable';\r\n\r\nconst Overview = () => {\r\n    return (\r\n        <div>\r\n            <Grid container>\r\n                <Grid item md={6} xs={12}>\r\n                    <CsvReader />\r\n                    <CsvTable />\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Overview;","import * as tf from \"@tensorflow/tfjs\";\r\n\r\nexport function Normalize(tensor) {\r\n    const max = tensor.max();\r\n    const min = tensor.min();\r\n    const normalized = NormalizeVal(max, min, tensor);\r\n    return { max, min, value: normalized };\r\n}\r\nexport function NormalizeVal(max, min, value) {\r\n    const std = max.sub(min)\r\n    const num = value.sub(min)\r\n    const normalized = num.div(std)\r\n    return normalized;\r\n}\r\nexport function ScaleBackValRaw(max, min, pred) {\r\n    const std = max.sub(min)\r\n    const num = pred.mul(std)\r\n    const scaled = num.add(min)\r\n    return scaled;\r\n}\r\nexport function ScaleBackVal(val, pred) {\r\n    return ScaleBackValRaw(val.max, val.min, pred);\r\n}\r\n\r\nexport function InputDimSize(tensor) {\r\n    return tensor.shape[1];\r\n}\r\nexport function RootMeanSquareError(yTrue, yPred) {\r\n    return tf.tidy(() => {\r\n        // Scale the the first column (0-1 shape indicator) of `yTrue` in order\r\n        // to ensure balanced contributions to the final loss value\r\n        // from shape and bounding-box predictions.\r\n        return tf.sqrt(tf.metrics.meanSquaredError(yTrue, yPred));\r\n    });\r\n}\r\n\r\nfunction ExtractInformation(raw, data) {\r\n    const value = {\r\n        value: [],\r\n        max: [],\r\n        min: []\r\n    };\r\n    for (let i = 0; i < data.length; ++i)\r\n        value.value.push([]);\r\n\r\n    for (const colName in raw) {\r\n        const max = raw[colName].max;\r\n        const min = raw[colName].min;\r\n        value.max.push(max);\r\n        value.min.push(min);\r\n        for (let i = 0; i < raw[colName].value.length; ++i) {\r\n            raw[colName].value[i] = (raw[colName].value[i] - min) / (max - min)\r\n            value.value[i].push(raw[colName].value[i]);\r\n        }\r\n    }\r\n    value.max = tf.tensor(value.max);\r\n    value.min = tf.tensor(value.min);\r\n    value.value = tf.tensor(value.value);\r\n    return value;\r\n}\r\n\r\nexport async function SplitIntoInputAndLabel(data, labelCol) {\r\n    let x_raw = {};\r\n    let y_raw = {};\r\n\r\n    for (const kv of data)\r\n        for (const colName in kv) {\r\n            const value = kv[colName];\r\n            if (labelCol.includes(colName)) {\r\n                if (y_raw[colName] == null)\r\n                    y_raw[colName] = { value: [], min: Number.MAX_SAFE_INTEGER, max: Number.MIN_SAFE_INTEGER }\r\n                y_raw[colName].max = Math.max(y_raw[colName].max, value);\r\n                y_raw[colName].min = Math.min(y_raw[colName].min, value);\r\n                y_raw[colName].value.push(value);\r\n            } else {\r\n                if (x_raw[colName] == null)\r\n                    x_raw[colName] = { value: [], min: Number.MAX_SAFE_INTEGER, max: Number.MIN_SAFE_INTEGER }\r\n                x_raw[colName].value.push(value);\r\n                x_raw[colName].max = Math.max(x_raw[colName].max, value);\r\n                x_raw[colName].min = Math.min(x_raw[colName].min, value);\r\n            }\r\n        }\r\n    const x = ExtractInformation(x_raw, data)\r\n    const y = ExtractInformation(y_raw, data)\r\n\r\n    console.log(x, y);\r\n    return [x, y];\r\n}","import * as tf from \"@tensorflow/tfjs\";\r\nimport { InputDimSize, RootMeanSquareError } from \"./utils\";\r\n\r\nexport async function Fit(\r\n    xTrain, yTrain,\r\n    OnEpochEndCallBack = async (_) => { },\r\n    l1 = 0.0, l2 = 0.0,\r\n    epochs = 100, batchSize = 16, validationSplit = 10) {\r\n\r\n    const regularizer = tf.regularizers.l1l2({\r\n        l1: l1,\r\n        l2: l2\r\n    })\r\n    const units = InputDimSize(xTrain);\r\n    console.log(xTrain.shape, yTrain.shape);\r\n    const model = tf.sequential();\r\n    model.add(\r\n        tf.layers.dense({\r\n            units: units, // Simple Linear Regression\r\n            inputShape: [units],\r\n            kernelRegularizer: regularizer\r\n        })\r\n    );\r\n    model.add(tf.layers.dense({ units: yTrain.shape[1] }));\r\n    model.compile({\r\n        loss: RootMeanSquareError,\r\n        optimizer: tf.train.sgd(0.01),\r\n        metrics: [tf.metrics.meanAbsoluteError]\r\n    });\r\n    const logs = [];\r\n\r\n    await model.fit(xTrain, yTrain, {\r\n        batchSize: batchSize,\r\n        epochs: epochs,\r\n        shuffle: true,\r\n        validationSplit: (validationSplit / 100), // In Percentage\r\n        callbacks: {\r\n            onEpochEnd: async (epoch, log) => {\r\n                logs.push({\r\n                    rmse: log.loss,\r\n                    val_rmse: log.val_loss,\r\n                    mae: log.meanAbsoluteError$1,\r\n                    val_mae: log.val_meanAbsoluteError$1,\r\n                    epoch: epoch\r\n                });\r\n                // Perform Action with All Train Logs\r\n                await OnEpochEndCallBack(logs);\r\n            }\r\n        }\r\n    }\r\n    );\r\n    for (const weight of model.weights) {\r\n        console.log(weight.name, weight.val.dataSync());\r\n    }\r\n    return model;\r\n}\r\n\r\nexport function Predict(model, value, args = () => { }) {\r\n    return model.predict(tf.tensor([value]), args);\r\n}\r\nexport function Evaluate(model, x, y, args = () => { }) {\r\n    return model.evaluate(x, y);\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { csvContext } from '../context/csv-context';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Utils from \"./utils\";\r\nimport { SplitIntoInputAndLabel, NormalizeVal, ScaleBackVal } from '../../ML/utils';\r\nimport * as LinearRegressionApply from \"../../ML/linreg\";\r\nimport { tensor } from '@tensorflow/tfjs';\r\nimport * as tfvis from \"@tensorflow/tfjs-vis\";\r\n\r\nconst lossContainer = { name: 'show.loss', tab: 'Loss' };\r\nconst accContainer = { name: 'show.accContainer', tab: 'accContainer' };\r\n\r\nasync function Perform(csv, labelCol, columnNames) {\r\n    const data = await csv.toArray();\r\n    const [x, y] = await SplitIntoInputAndLabel(data, labelCol);\r\n    const model = await LinearRegressionApply.Fit(x.value, y.value, async (logs) => {\r\n        await tfvis.show.history(lossContainer, logs, [\"rmse\", \"val_rmse\"]);\r\n        await tfvis.show.history(accContainer, logs, [\"mae\", \"val_mae\"]);\r\n    });\r\n    {\r\n        const xCols = Utils.SetDifference(columnNames, labelCol);\r\n        const val_pred = Utils.CreateTensor(data[0], xCols);\r\n        console.log(x.max.shape, y.max.shape, x.min.shape);\r\n        const val_pred_norm = await NormalizeVal(x.max, x.min, val_pred).array();\r\n        const prediction = LinearRegressionApply.Predict(model, val_pred_norm);\r\n        console.log(\"Prediction for\", val_pred.dataSync()[0], \"is\", ScaleBackVal(y, prediction).arraySync()[0], ((prediction.dataSync()[0]) * (y.max.dataSync()[0] - y.min.dataSync()[0])) + y.min.dataSync()[0]);\r\n    }\r\n    model.summary();\r\n    await tfvis.show.modelSummary({ name: 'Model', tab: 'Model' }, model);\r\n    {\r\n        let preds = [];\r\n        const val_pred_norms = await x.value.array();\r\n        for (const val_pred_norm of val_pred_norms) {\r\n            const pred = LinearRegressionApply.Predict(model, val_pred_norm).array();\r\n            preds.push(pred);\r\n        }\r\n        preds = await Promise.all(preds);\r\n        preds = preds.map(pred => pred[0]);\r\n        preds = await ScaleBackVal(y, tensor(preds)).array();\r\n        const y_vals = await ScaleBackVal(y, y.value).array();\r\n        const x_vals = (await ScaleBackVal(x, x.value).array());\r\n        console.log(preds, x_vals, y_vals);\r\n        await Utils.DrawChart(x_vals, y_vals, preds);\r\n    }\r\n    return { x, y };\r\n}\r\nexport default function LinearRegression() {\r\n    const { csv } = React.useContext(csvContext);\r\n    const [columnNames, setColumnNames] = React.useState([]);\r\n    const [selectedColumn, setSelectedColumns] = React.useState([]);\r\n    React.useEffect(() => {\r\n        if (csv == null)\r\n            return;\r\n        async function LoadColumnNames() {\r\n            const columns = await csv.columnNames();\r\n            setColumnNames(columns);\r\n            setSelectedColumns(columns[columns.length - 1]);\r\n        }\r\n        LoadColumnNames();\r\n    }, [csv, setColumnNames]);\r\n\r\n    if (csv == null)\r\n        return <Redirect to=\"/overview\" />\r\n\r\n    return <>\r\n        hello\r\n        <Button onClick={async () => await Perform(csv, selectedColumn, columnNames)} >\r\n            Perform\r\n            </Button>\r\n    </>\r\n}\r\n\r\n","import React, { useState, useCallback } from 'react';\r\nimport { \r\n  HashRouter as Router, \r\n  Route, \r\n  Redirect, \r\n  Switch \r\n} from 'react-router-dom';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport customTheme from './components/theme/theme.json';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { csvContext } from './components/context/csv-context';\r\nimport Header from './components/utils/Header';\r\nimport Dashboard from './components/utils/Dashboard';\r\nimport Overview from './components/utils/Overview';\r\nimport LinearRegression from \"./components/ml/linreg\";\r\n\r\nconst theme = createMuiTheme(customTheme);\r\n\r\nconst App = () => {\r\n  const [csv, setCsv] = useState();\r\n\r\n  const fetchCsv = useCallback((csv) => {\r\n    setCsv(csv);\r\n  }, []);\r\n\r\n  let routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n            <Dashboard />\r\n        </Route>\r\n        <Route path=\"/overview\" exact>\r\n            <Overview />\r\n        </Route>\r\n        <Route path=\"/ml/linreg\" exact>\r\n          <LinearRegression/>\r\n        </Route>\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    )\r\n\r\n  return (\r\n      <ThemeProvider theme={theme}>\r\n        <csvContext.Provider\r\n          value={{\r\n            csv: csv,\r\n            fetchCsv: fetchCsv\r\n          }}\r\n        >\r\n          <Router>\r\n            <Header>\r\n              {routes}\r\n            </Header>\r\n          </Router>\r\n        </csvContext.Provider>\r\n      </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}